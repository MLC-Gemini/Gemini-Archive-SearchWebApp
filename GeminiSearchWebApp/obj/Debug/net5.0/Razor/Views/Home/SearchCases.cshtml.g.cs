#pragma checksum "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\Home\SearchCases.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "18e69a5fce497f293fa6993211c605c129555a8f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_SearchCases), @"mvc.1.0.view", @"/Views/Home/SearchCases.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\_ViewImports.cshtml"
using GeminiSearchWebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\_ViewImports.cshtml"
using GeminiSearchWebApp.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\Home\SearchCases.cshtml"
using System.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"18e69a5fce497f293fa6993211c605c129555a8f", @"/Views/Home/SearchCases.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0890da2bea6a613c6fe5116e779293221719f1ee", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_SearchCases : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CustomJS/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/CustomCSS/jquery-ui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CustomJS/jquery-ui.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CustomJS/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/CustomCSS/jquery.dataTables.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("display:none; text-align:center;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Account Level", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Adviser Level", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Customer Level", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(" \r\n");
#nullable restore
#line 4 "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\Home\SearchCases.cshtml"
  

    ViewBag.title = "Search Cases";


#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "18e69a5fce497f293fa6993211c605c129555a8f7761", async() => {
                WriteLiteral("\r\n    <title>Gemini Case Search</title>\r\n\r\n\r\n");
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "18e69a5fce497f293fa6993211c605c129555a8f8111", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "18e69a5fce497f293fa6993211c605c129555a8f9210", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "18e69a5fce497f293fa6993211c605c129555a8f10388", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "18e69a5fce497f293fa6993211c605c129555a8f11488", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "18e69a5fce497f293fa6993211c605c129555a8f12908", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

    <script type=""text/javascript"">
        var caseIdVal;
        var caseTypeVal;
        $(document).ready(function () {

             $.fn.resetForm = function () {
                $(""input"").change(function () {
                    if ($.fn.ifEmpty() == false) {
                        location.reload();
                    }
                })
                $(""#filter_level"").change(function () {
                    if ($.fn.ifEmpty() == false) {
                        location.reload();
                    }
                })
                //$(""#dateRange"").change(function () {
                //    if ($.fn.ifEmpty() == false) {
                //        location.reload();
                //    }
                //})
                //$(""#toRange"").change(function () {
                //    if ($.fn.ifEmpty() == false) {
                //        location.reload();
                //    }
                //})
            };
            var empty = false;
         ");
                WriteLiteral(@"   $.fn.ifEmpty = function () {
                $('input[type=""text""]').each(function () {
                    console.log($(this).val());
                    if ($(this).val() == """") {
                        empty = true;
                        return true;
                    }
                })
                return false;
            };

           // console.log($.fn.ifEmpty());
            var tableDoc;
            var tableAction;
            $(""#btnSearch"").click(function () {
                var from = $(""#dateRange"").val();
                var to = $(""#toRange"").val();
                var d = new Date(from.split(""/"").reverse().join(""-""));
                var dd = d.getDate();
                var mm = d.getMonth() + 1;
                var yy = d.getFullYear();
                var startDate = mm + ""/"" + dd + ""/"" + yy;
                var d = new Date(to.split(""/"").reverse().join(""-""));
                var ddt = d.getDate();
                var mmt = d.getMonth() + 1;
     ");
                WriteLiteral("           var yyt = d.getFullYear();\r\n                var endDate = mmt + \"/\" + ddt + \"/\" + yyt;\r\n\r\n                if (!$(\'#filter_level\').val() && document.getElementById(\"Pid\").value.length == 0) {\r\n\r\n                    alert(\'");
#nullable restore
#line 83 "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\Home\SearchCases.cshtml"
                      Write(ViewBag.emptySearch);

#line default
#line hidden
#nullable disable
                WriteLiteral("\');\r\n                    location.reload();\r\n                }\r\n                else if (!$(\'#filter_level\').val()) {\r\n                    alert(\'");
#nullable restore
#line 87 "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\Home\SearchCases.cshtml"
                      Write(ViewBag.emptySearchLevel);

#line default
#line hidden
#nullable disable
                WriteLiteral("\');\r\n                    location.reload();\r\n                }\r\n                else if ($(\'#filter_level\').val() == \"Account Level\" && document.getElementById(\"Pid\").value.length == 0) {\r\n                    alert(\'");
#nullable restore
#line 91 "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\Home\SearchCases.cshtml"
                      Write(ViewBag.emptyAccountID);

#line default
#line hidden
#nullable disable
                WriteLiteral("\');\r\n                    location.reload();\r\n                }\r\n                else if ($(\'#filter_level\').val() == \"Adviser Level\" && document.getElementById(\"Pid\").value.length == 0) {\r\n                    alert(\'");
#nullable restore
#line 95 "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\Home\SearchCases.cshtml"
                      Write(ViewBag.emptyAdviserID);

#line default
#line hidden
#nullable disable
                WriteLiteral("\');\r\n                    location.reload();\r\n                }\r\n                else if ($(\'#filter_level\').val() == \"Customer Level\" && document.getElementById(\"Pid\").value.length == 0) {\r\n                    alert(\'");
#nullable restore
#line 99 "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\Home\SearchCases.cshtml"
                      Write(ViewBag.emptyCustomerID);

#line default
#line hidden
#nullable disable
                WriteLiteral("\');\r\n                    location.reload();\r\n                }\r\n                else if (document.getElementById(\"Pid\").value.length == 0) {\r\n                    alert(\'");
#nullable restore
#line 103 "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\Home\SearchCases.cshtml"
                      Write(ViewBag.emptySearchPid);

#line default
#line hidden
#nullable disable
                WriteLiteral("\');\r\n                    location.reload();\r\n                }\r\n                else if ((Date.parse(startDate)) >= (Date.parse(endDate))) {\r\n                    alert(\'");
#nullable restore
#line 107 "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\Home\SearchCases.cshtml"
                      Write(ViewBag.fromDateGreaterThanToDate);

#line default
#line hidden
#nullable disable
                WriteLiteral("\');\r\n                }\r\n                else if ($(\'input[name=\"date_case\"]:checked\').length == 0) {\r\n                    alert(\'");
#nullable restore
#line 110 "C:\Temp\VisualStudio Source\GemArchSearchWebApp\GeminiSearchWebApp\Views\Home\SearchCases.cshtml"
                      Write(ViewBag.emptyCaseTypeDate);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
                    location.reload();
                }
                else {
                    $(""#output1"").show();
                    $(""#output2"").show();
                }

                var aFilterValue = $(""#filter_level option:selected"").val();
                var aIdValue = $(""#Pid"").val();
                var aFromDate = $(""input[id='dateRange']"").val();
                var aToDate = $(""input[id='toRange']"").val();
                var aCaseType = $('input[name=""date_case""]:checked').val();


                $.ajax(
                    {
                        type: ""POST"",
                        url: ""/Home/GetCasesRecord"",
                        dataType: ""JSON"",
                        data: { filterLevel: aFilterValue, userId: aIdValue, fromDate: aFromDate.toString(), toDate: aToDate.toString(), caseDateType: aCaseType },
                        success: function (result) {

                            try {
                                if (!$.fn.DataTable");
                WriteLiteral(@".isDataTable(""#myTable"")) {
                                    var myTable = $(""#myTable"").DataTable({
                                        pageLength: 10,
                                        searching: false,
                                        select: true,
                                        lengthMenu: [[10, 20, 50, -1], [10, 20, 50, 'All records']],
                                        data: result,
                                        columns: [
                                            { 'data': 'Account' },
                                            { 'data': 'Status' },
                                            { 'data': 'CaseType' },
                                            { 'data': 'Created' },
                                            { 'data': 'Completed' },
                                            { 'data': 'Priority' },
                                            { 'data': 'Adviser' },
                                            { 'data': 'Flag");
                WriteLiteral(@"' },
                                            { 'data': 'CustomerId' },
                                            { 'data': 'Requestor' },
                                            { 'data': 'CaseID' },
                                            { 'data': 'WorkpackID' },
                                            { 'data': 'Team' },
                                            { 'data': 'InPFC' },
                                            { 'data': 'Employee' }
                                        ]
                                    });
                                    $('#myTable tbody').on('click', 'tr', function () {
                                        if ($(this).hasClass('selected')) {
                                            $(this).removeClass('selected');
                                        }
                                        else {
                                            myTable.$('tr.selected').removeClass('selected');
                          ");
                WriteLiteral(@"                  $(this).addClass('selected');
                                        }
                                        $(this).addClass('selected');
                                        var data = myTable.row(this).data();
                                        caseIdVal = data.CaseID;
                                        console.log(caseIdVal);
                                        caseTypeVal = data.CaseType;
                                        console.log(caseTypeVal);
                                        if (caseIdVal == null && caseTypeVal == null) {
                                            document.getElementById(""res"").innerHTML = 'Case Activities:';
                                        }
                                        else if (caseTypeVal == null) {
                                            document.getElementById(""res"").innerHTML = 'Case Activities for (id ' + caseIdVal + ')';
                                        }
                         ");
                WriteLiteral(@"               else if (caseIdVal == null) {
                                            document.getElementById(""res"").innerHTML = 'Case Activities for ""' + caseTypeVal + '""';
                                        }
                                        else {
                                            document.getElementById(""res"").innerHTML = 'Case Activities for "" ' + caseTypeVal + '"" (id ' + caseIdVal + ')';
                                        }
                                    });
                                    $('#myTable tbody').on('dblclick', 'tr', function () {
                                        if ($(this).hasClass('selected')) {
                                            $(this).removeClass('selected');
                                        }
                                        else {
                                            myTable.$('tr.selected').removeClass('selected');
                                            $(this).addClass('selected');
     ");
                WriteLiteral(@"                                   }
                                        $(this).addClass('selected');
                                        var data = myTable.row(this).data();
                                        caseIdVal = data.CaseID;
                                        console.log(caseIdVal);
                                        caseTypeVal = data.CaseType;
                                        console.log(caseTypeVal);
                                        if (caseIdVal == null && caseTypeVal == null) {
                                            document.getElementById(""res"").innerHTML = 'Case Activities:';
                                        }
                                        else if (caseTypeVal == null) {
                                            document.getElementById(""res"").innerHTML = 'Case Activities for (id ' + caseIdVal + ')';
                                        }
                                        else if (caseIdVal == null) {
        ");
                WriteLiteral(@"                                    document.getElementById(""res"").innerHTML = 'Case Activities for ""' + caseTypeVal + '""';
                                        }
                                        else {
                                            document.getElementById(""res"").innerHTML = 'Case Activities for "" ' + caseTypeVal + '"" (id ' + caseIdVal + ')';
                                        }
                                    });
                                }
                            }
                            catch (e) {
                                writeLogFileFromView(e);
                                console.log(e);
                            }



                            var caseTable = $(""#myTable tr"").eq(1).find(""td:nth-child(11)"");
                            var caseIdText = caseTable.text();

                            var aFValue = $(""#filter_level option:selected"").val();
                            var aId = $(""#Pid"").val();
               ");
                WriteLiteral(@"             var aFDate = $(""input[id='dateRange']"").val();
                            var aTDate = $(""input[id='toRange']"").val();
                            var aCase = $('input[name=""date_case""]:checked').val();

                            $.ajax(
                                {

                                    type: ""POST"",
                                    url: ""/Home/GetSearchDoc"",
                                    dataType: ""JSON"",
                                    data: { fLevel: aFValue, uId: aId, fDate: aFDate.toString(), tDate: aTDate.toString(), caseType: aCase },
                                    success: function (response) {

                                        try {
                                            if (!$.fn.DataTable.isDataTable(""#actionTable"")) {
                                                $.fn.dataTable.ext.errMode = 'none';

                                                $('#actionTable').on('error.dt', function (e, settings, techNote, ");
                WriteLiteral(@"message) {
                                                    console.log('An error has been reported by DataTables: ', message);
                                                });
                                                tableAction = $('#actionTable').DataTable({
                                                    ""paginate"": false,
                                                    ""searching"": false,
                                                    ""bInfo"": false,
                                                    ""sorting"": false
                                                });
                                                tableAction.column(4).visible(false);
                                            }
                                        } catch (e) {
                                            writeLogFileFromView(e);
                                            console.log(e);
                                        }

                                        $('");
                WriteLiteral(@"#actionTable tbody').on('click', 'tr', function () {
                                            if ($(this).hasClass('selected')) {
                                                $(this).removeClass('selected');
                                            }
                                            else {
                                                tableAction.$('tr.selected').removeClass('selected');
                                                $(this).addClass('selected');
                                            }
                                            $(this).addClass('selected');
                                        });
                                        $('#actionTable tbody').on('dblclick', 'tr', function () {
                                            if ($(this).hasClass('selected')) {
                                                $(this).removeClass('selected');
                                            }
                                            else ");
                WriteLiteral(@"{
                                                tableAction.$('tr.selected').removeClass('selected');
                                                $(this).addClass('selected');
                                            }
                                            $(this).addClass('selected');
                                        });


                                        try {
                                            if (!$.fn.DataTable.isDataTable(""#docTable"")) {
                                                $.fn.dataTable.ext.errMode = 'none';

                                                $('#docTable').on('error.dt', function (e, settings, techNote, message) {
                                                    console.log('An error has been reported by DataTables: ', message);
                                                });
                                                tableDoc = $('#docTable').DataTable({
                                                    ""sea");
                WriteLiteral(@"rching"": false,
                                                    ""fixedColumns"": {
                                                        ""heightMatch"": 'none',
                                                    },
                                                    ""lengthChange"": false,
                                                    ""paginate"": false,
                                                    ""bInfo"": false

                                                });
                                            }
                                        } catch (e) {
                                            writeLogFileFromView(e);
                                            console.log(e);
                                        }


                                        try {
                                            tableDoc.clear();
                                            if (response.length != 0) {
                                                $.each(response, f");
                WriteLiteral(@"unction (i, index) {
                                                    if (caseIdText == index.CaseID) {
                                                        tableDoc.row.add([
                                                            index.DocumentType,
                                                            index.DocCreated,
                                                            index.Id,
                                                            index.Source,
                                                            index.BoxID,
                                                            index.BundleID,
                                                            index.DateTimeReceived,
                                                            index.LetterDescription
                                                        ]);
                                                        tableDoc.draw();
                                                    }
                      ");
                WriteLiteral(@"                          });
                                            }

                                        } catch (e) {
                                            writeLogFileFromView(e);
                                            console.log(e);
                                        }


                                        var DELAY = 700, clicks = 0, timer = null;
                                        var rowId = null;
                                        $(function () {

                                            $(""#myTable"").on(""click"", 'tr', function (e) {

                                                clicks++;

                                                if (clicks === 1) {
                                                    rowId = this.rowIndex;
                                                    var caseText = $(""#myTable tr"").eq(rowId).find(""td:nth-child(11)"");
                                                    var selectedCaseId = caseText.text()");
                WriteLiteral(@";
                                                    timer = setTimeout(function () {
                                                        try {
                                                            tableDoc.clear().draw();
                                                            if (response.length != 0) {
                                                                $.each(response, function (i, index) {
                                                                    if (selectedCaseId == index.CaseID) {
                                                                        console.log(index.CaseID);
                                                                        tableDoc.row.add([
                                                                            index.DocumentType,
                                                                            index.DocCreated,
                                                                            index.Id,
               ");
                WriteLiteral(@"                                                             index.Source,
                                                                            index.BoxID,
                                                                            index.BundleID,
                                                                            index.DateTimeReceived,
                                                                            index.LetterDescription
                                                                        ]);
                                                                        tableDoc.draw();
                                                                    }
                                                                });
                                                            }
                                                        } catch (e) {
                                                            writeLogFileFromView(e);
                                    ");
                WriteLiteral(@"                        console.log(e);
                                                        }


                                                        clicks = 0;

                                                    }, DELAY);

                                                } else {

                                                    clearTimeout(timer);

                                                    rowId = this.rowIndex;
                                                    var caseText = $(""#myTable tr"").eq(rowId).find(""td:nth-child(11)"");
                                                    var caseIdSelected = caseText.text();

                                                    $.ajax(
                                                        {
                                                            type: ""POST"",
                                                            url: ""/Home/GetActionRecord"",
                                                            dataType: """);
                WriteLiteral(@"JSON"",
                                                            data: { selectedCaseId: caseIdSelected},

                                                            success: function (outcome) {
                                                                try {
                                                                    tableAction.clear();
                                                                    $(""#fullTextMessage"").text('');
                                                                    if (outcome.length != 0) {
                                                                        $.each(outcome, function (i, index) {
                                                                            tableAction.row.add([
                                                                                index.Action,
                                                                                index.DateandTime,
                                                          ");
                WriteLiteral(@"                      index.Employee,
                                                                                index.Message,
                                                                                index.Text2
                                                                            ]);
                                                                            tableAction.draw();
                                                                        });
                                                                        modal.style.display = ""block"";
                                                                    }
                                                                    else {
                                                                        tableAction.clear().draw();
                                                                        modal.style.display = ""block"";
                                                                    }
              ");
                WriteLiteral(@"                                                  } catch (e) {
                                                                    writeLogFileFromView(e);
                                                                    console.log(e);
                                                                }


                                                                $('#actionTable').on('click', 'tr', function (e) {
                                                                    var actionRowId = this.rowIndex;
                                                                    var selectedMsg1 = $(""#actionTable tr"").eq(actionRowId).find(""td:nth-child(4)"");
                                                                    var msg1 = selectedMsg1.text();
                                                                    var rowValue = tableAction.row(actionRowId-1).data();
                                                                    var msg2 = rowValue[4];
                        ");
                WriteLiteral(@"                                            if (msg2 == null) {
                                                                        msg2 = '';
                                                                    }
                                                                    $(""#fullTextMessage"").text('').append(msg1 + msg2);
                                                                });
                                                            },
                                                            error: function () {
                                                                console.log(""Error"");
                                                            }


                                                        });

                                                    clicks = 0;
                                                }

                                            })
                                                .on(""dblclick"", function (e) {
     ");
                WriteLiteral(@"                                               e.preventDefault();
                                                });

                                        });



                                    },
                                    error: function () {
                                        console.log(""Error"");
                                    }
                                });
                        },
                        error: function () {
                            console.log(""Error"");
                        }

                    });



                $.fn.resetForm();

            });
            var modal = document.getElementById(""caseModal"")
            var span = document.getElementsByClassName(""close"")[0];



            span.onclick = function () {
                modal.style.display = ""none"";
                tableAction.clear().draw();
            }



            window.onclick = function (event) {
                if (event.target ");
                WriteLiteral(@"== modal) {
                    modal.style.display = ""none"";
                    tableAction.clear().draw();
                }
            }

            function writeLogFileFromView(exFromCatch) {
                $.ajax(
                    {
                        type: ""POST"",
                        url: ""/Home/ExceptionMessageFromView"",
                        dataType: ""JSON"",
                        data: { exView: exFromCatch },
                        success: function (response) {
                            console.log(""success from View"")
                        },
                        error: function () {
                            console.log(""error from View"");
                        }
                    });

            }


        });


    </script>

    <style>
        table {
            white-space: nowrap;
            width: auto;
            align-content: center;
            background-color: aliceblue;
            font-size: 15px;
         ");
                WriteLiteral(@"   font-family: 'Times New Roman';
            font-style: normal;
            text-align: center;
            vertical-align: top;
            max-height: 10px;
        }

        .rowHighlighter tr:hover td {
            background-color: lightblue;
        }

        th, td {
            white-space: nowrap;
        }

        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
            font-size: small;
            padding: 0px 0px 0px 0px;
        }

        .size {
            font-size: small;
        }

        #myTable.dataTable tbody > tr.selected,
        #myTable.dataTable tbody > tr > .selected {
            background-color: greenyellow;
        }

        #actionTable.dataTable tbody > tr.selected,
        #actionTable.dataTable tbody > tr > .selected {
            background-color: greenyellow;
        }

        #myTable.dataTable tbody th, #docTable.dataTable tbody th,
        #myTable.dataTable tbody td, #docTable.dataTable t");
                WriteLiteral(@"body td {
            padding: 0px 18px;
            text-align: left;
        }

        #myTable.dataTable thead th, #docTable.dataTable thead th,
        #myTable.dataTable thead td, #docTable.dataTable thead td {
            padding: 0px 18px;
            text-align: left;
        }

        #actionTable.dataTable thead th, #actionTable.dataTable thead td,
        #actionTable.dataTable tbody th, #actionTable.dataTable tbody td {
            padding: 0px 18px;
            text-align: left;
            white-space: normal;
            word-wrap: break-word;
        }

        #btnSearch {
            padding: 0px 20px 0px 20px;
            font-size: 16px;
            font-weight: bold;
            margin: 10px 10px 10px 10px;
        }

            #btnSearch:hover {
                background-color: lightskyblue;
            }

        .datepicker {
            width: 140px;
        }

        .textBoxInput {
            width: 150px;
            outline: double;
    ");
                WriteLiteral(@"    }

        .labelStyle {
            padding-left: 10px;
            font-weight: bold;
            font-style: normal;
            text-align: left;
            font-size: 15px;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            padding-top: 100px;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0,0,0);
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            width: auto;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        .close {
            color: #aaaaaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
 ");
                WriteLiteral("               cursor: pointer;\r\n            }\r\n    </style>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "18e69a5fce497f293fa6993211c605c129555a8f48483", async() => {
                WriteLiteral(@"
    <div>
        <table style=""align-content:center; border: 1px solid black; border-style: double; border-color:black; border-width:thick"">
            <tr>
                <td>
                    <table>
                        <tr>
                            <td style=""padding-right:50px; padding-left:20px; padding-top:10px;"">
                                <label for=""filter_level"" class=""labelStyle"">Search By: </label>
                                <select name=""filter_level"" id=""filter_level"" style=""width:150px; height:30px;"">
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "18e69a5fce497f293fa6993211c605c129555a8f49345", async() => {
                    WriteLiteral("--Select--");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "18e69a5fce497f293fa6993211c605c129555a8f50696", async() => {
                    WriteLiteral("Account Level");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "18e69a5fce497f293fa6993211c605c129555a8f51963", async() => {
                    WriteLiteral("Adviser Level");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "18e69a5fce497f293fa6993211c605c129555a8f53230", async() => {
                    WriteLiteral("Customer Level");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                </select>
                            </td>
                            <td style=""padding-right: 40px; padding-top: 10px;"">
                                <input id=""Pid"" type=""text"" class=""textBoxInput"" size=""10"" placeholder=""Enter ID"" style=""text-align:center;"" />
                            </td>
                            <td style=""padding-right: 40px; padding-top: 10px;"">
                                <label for=""dateRange"" class=""labelStyle"">From Date:</label>
");
                WriteLiteral(@"                                <input type=""text"" id=""dateRange"" class=""datepicker"" title=""From"" style=""outline:double"" readonly />
                                <script>
                                    $("".datepicker"").datepicker({
                                        dateFormat: 'dd/mm/yy',
                                        changeMonth: true,
                                        changeYear: true,
                                        yearRange: ""1980:+nn"",
                                        onSelect: function (dateText) {
                                            console.log(""selected Date:"" + dateText + "";inputs's current value:"" + this.value);
                                            $(this).change();
                                        }
                                    });
                                </script>
                            </td>
                            <td style=""padding-top:10px;"">
                                <label for=""to");
                WriteLiteral(@"Range"" class=""labelStyle"">To Date:</label>
                                <input type=""text"" id=""toRange"" class=""datepicker"" title=""To"" style=""outline:double"" readonly>
                                <script>
                                    $("".datepicker"").datepicker({
                                        dateFormat: 'dd/mm/yy',
                                        changeMonth: true,
                                        changeYear: true,
                                        yearRange: ""1980:+nn"",
                                        onSelect: function (dateText) {
                                            console.log(""selected Date:"" + dateText + "";inputs's current value:"" + this.value);
                                            $(this).change();
                                        }
                                    });
                                </script>
                            </td>
                        </tr>
                        <tr>
       ");
                WriteLiteral(@"                     <td colspan=""2""></td>
                            <td align=""left"" style="" padding-left:10px; padding-bottom: 0px;"">
                                <input id=""rdbCaseCreationDate"" type=""radio"" name=""date_case"" value=""Case Creation Date"" checked=""checked"" />
                                <label for=""rdbCaseCreationDate"" class=""labelStyle"">Case Creation Date</label>
                            </td>
                            <td align=""left"" style=""padding-left: 10px; padding-bottom: 0px;"">
                                <input id=""rdbCaseClosedDate"" type=""radio"" name=""date_case"" value=""CaseClosed Date"" />
                                <label for=""rdbCaseClosedDate"" class=""labelStyle"">Case Closed Date</label>
                            </td>
                            <td colspan=""2"" style=""padding-bottom: 0px; padding-right:5px;"">
                                <button id=""btnSearch"" type=""button"" name=""btn_search"" value=""search"">Search</button>
                      ");
                WriteLiteral(@"      </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </div>

    <div id=""output1"" style=""display: none;"" >
        <label for=""caseText"" class=""labelStyle"" style=""margin-top: 0px; margin-bottom: 0px;"">Cases:</label>
        <div style="" border: 3px ridge black; overflow:auto;"">
            <table title=""Double click on any case to view Case Activities"" id=""myTable"" class=""table table-condensed rowHighlighter compact nowrap"" style=""width:contain;  border: 1px ridge lightgray; margin: 0px 10px 0px 10px; background-color:lightskyblue;"">
                <thead>
                    <tr style=""vertical-align:top;font-size:small;"">
                        <th>Account</th>
                        <th>Status</th>
                        <th>Case Type</th>
                        <th>Created</th>
                        <th>Completed</th>
                        <th>Priority</th>
                        <th>Adviser</th>");
                WriteLiteral(@"
                        <th>Flag</th>
                        <th>Customer Id</th>
                        <th>Requestor</th>
                        <th>Case ID</th>
                        <th>Workpack ID</th>
                        <th>Team</th>
                        <th>InPFC</th>
                        <th>Employee</th>
                    </tr>
                </thead>
                <tbody id=""caseContainer"">
                </tbody>
            </table>
        </div>
    </div>
    <div id=""output2"" style="" display:none"">
        <label for=""documentText"" class=""labelStyle"" style=""margin-top: 0px; margin-bottom: 0px;"">Documents:</label>
        <div style=""border: 3px ridge black; overflow:auto;"">
            <table id=""docTable"" class=""table table-condensed size compact nowrap"" style=""width: contain; border: 1px ridge lightgray; margin: 0px 10px 0px 10px; background-color: lightskyblue; "">
                <thead>
                    <tr style=""vertical-align: top; font-size");
                WriteLiteral(@":small;"">
                        <th>Document Type</th>
                        <th>Created</th>
                        <th>Id</th>
                        <th>Source</th>
                        <th>Box/Batch</th>
                        <th>Bundle Id</th>
                        <th>Date/Time Received</th>
                        <th>Id - Letter Description</th>
                    </tr>
                </thead>
                <tbody id=""docContainer"" class=""rowHighlighter"">
                </tbody>
            </table>
        </div>
    </div>

    <div id=""caseModal"" class=""modal"" title=""Case Activities"">
        <div class=""modal-content"">
            <span class=""close"">&times;</span>
            <label for=""actionText"" id=""res"" class=""labelStyle"" style=""margin-top: 0px; margin-bottom: 0px;""></label>
            <div style=""overflow: scroll; border: 3px ridge black;"">
                <table id=""actionTable"" class=""table table-condensed size compact"">
                    <thead");
                WriteLiteral(@">
                        <tr>
                            <th>Action</th>
                            <th>Date and Time</th>
                            <th>Employee</th>
                            <th>Message</th>
                        </tr>
                    </thead>
                    <tbody id=""actionContainer"" class=""rowHighlighter"">
                    </tbody>
                </table>
            </div>
            <div>
                <label for=""fullTextMessage"" class=""labelStyle"">Full Text of Message:</label><br />
                <textarea id=""fullTextMessage"" rows=""5"" cols=""150"" readonly style=""outline:double; max-width:100%; resize:none""></textarea>
            </div>
        </div>
    </div>


");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
