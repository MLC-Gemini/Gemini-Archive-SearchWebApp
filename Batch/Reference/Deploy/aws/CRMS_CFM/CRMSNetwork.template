{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Server Application and DB Securitygroups",
  "Parameters": {
    "DBCLASS": {
        "Description": "CRMS RDS Oracle DBClass",
        "Type": "String",
        "Default": "db.t3.small"
    },
    "VPCID": {
      "Description": "ID of the VPC (e.g., vpc-0343606e)",
      "Type": "AWS::EC2::VPC::Id"
    },
    "Subnet1ID": {
      "Description": "ID of the subnet 1 for auto scaling group into (e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "Subnet2ID": {
      "Description": "ID of the subnet 2 for auto scaling group (e.g., subnet-e3246d8e)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "Subnet3ID": {
      "Description": "ID of the subnet 3 for auto scaling group (e.g., subnet-e3246d8e)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "RDSPort": {
      "Description": "CRMS RDS Oracle listener port",
      "Type": "String",
      "Default": "1588"
    },
    "DBSSLPort": {
      "Description": "CRMS RDS SSL Port",
      "Type": "String",
      "Default": "2484"
    },
    "Owner": {
      "Description": "Mandatory Owner tag",
      "Type": "String",
      "Default": "CRMS"
    },
    "CostCentre": {
      "Description": "Mandatory Cost Centre tag",
      "Type": "String",
      "Default": "V_CRMS"
    },
    "SSHAccessRule": {
      "Description": "The IP address range that can be used to connect to CRMS database & Robot Server",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "10.0.0.0/8",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "SSHAccessRuleTibco": {
      "Description": "The Tibco IP address be used to connect CRMS database to Tibco Server",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "155.60.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "RDSEngine": {
      "Description": "RDS ORACLE Engine (e.g. oracle-ee-12.2)",
      "Type": "String",
      "Default": "oracle-ee-12.2"
    }
  },
  "Rules": {
    "SubnetsInVPC": {
      "Assertions": [
        {
          "Assert": {
            "Fn::EachMemberIn": [
              {
                "Fn::ValueOfAll": [
                  "AWS::EC2::Subnet::Id",
                  "VpcId"
                ]
              },
              {
                "Fn::RefAll": "AWS::EC2::VPC::Id"
              }
            ]
          },
          "AssertDescription": "All subnets must exist in the VPC"
        }
      ]
    }
  },
  "Conditions" : {"TunedDBParameter" : {"Fn::Equals" : [{"Ref" : "DBCLASS"}, "db.m5.2xlarge"]}},
  "Resources": {
      
    "AppServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enables SSH access to App Server",
        "VpcId": { "Ref": "VPCID" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "TCP",
            "FromPort": "3389",
            "ToPort": "3389",
            "CidrIp": { "Ref": "SSHAccessRule" }
          }
        ]
      }
      },

      "BatchSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Enables Control-M access to on-prem server",
          "VpcId": { "Ref": "VPCID" },
          "SecurityGroupIngress": [
            {
              "IpProtocol": "TCP",
              "FromPort": "9025",
              "ToPort": "9026",
              "CidrIp": { "Ref": "SSHAccessRule" }
            }
          ]
        }
      },

      "EFSMountTargetSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Security Group for Mount Target",
          "VpcId": { "Ref": "VPCID" },
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": "2049",
              "ToPort": "2049",
              "SourceSecurityGroupId": { "Ref": "BatchSecurityGroup" }
            }
          ]
        }
      },

      "CRMSDBSubnetGroup" : {
              "Type" : "AWS::RDS::DBSubnetGroup",
              "Properties" : {
                      "DBSubnetGroupDescription" : "DB Sub net group for CRMS Database",
                      "SubnetIds" : [
                        { "Ref":"Subnet1ID" },
                        { "Ref":"Subnet2ID" },
                        { "Ref":"Subnet3ID" }
                      ]
              }
      },

    "CRMSDBParameterGRP":{
        "Type" : "AWS::RDS::DBParameterGroup",
        "Properties" : {
            "Description" : "CRMS Specific database parameter group definition",
            "Family" : { "Ref":"RDSEngine" },
            "Parameters" : 
            {
                "Fn::If" : [ "TunedDBParameter",
                    {                          
                        "audit_trail":"DB, EXTENDED",
                        "circuits":"2000",
                        "db_block_checking":"FULL",
                        "dml_locks":"2000",
                        "job_queue_processes":"10",
                        "optimizer_index_caching":"80",
                        "optimizer_index_cost_adj":"50",
                        "remote_dependencies_mode":"SIGNATURE",
                        "result_cache_max_size":"134217728",
                        "streams_pool_size":"167772160",
                        "undo_retention":"10800",
                        "fast_start_mttr_target":"1800",
                        "sessions":"3072",
                        "processes":"2000",
                        "shared_servers":"40",
                        "max_shared_servers":"211",
                        "dispatchers":"(PROTOCOL=TCP)(DISPATCHERS=5)",
                        "open_cursors":"3072",
                        "sort_area_size":"52428800",
                        "sort_area_retained_size":"5242880",
                        "archive_lag_target":"300",
                        "log_checkpoint_timeout":"1800",
                        "log_checkpoint_interval":"0",
                        "parallel_adaptive_multi_user":"FALSE",
                        "parallel_max_servers":"40",
                        "parallel_min_servers":"8",
                        "parallel_servers_target":"20",
                        "parallel_threads_per_cpu":"1",
                        "sga_target":"24830279680",
                        "large_pool_size":"1241513984",
                        "pga_aggregate_target":"4129936896",
                        "pga_aggregate_limit":"6442450944"
                    },
                    {
                        "parallel_adaptive_multi_user":"FALSE",
                        "parallel_threads_per_cpu":"1"
                    }
                ]
            }
        }
    },

      "RDSDBSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Allow CRMS Application from On-Prem to Access RDS",
          "VpcId": {
            "Ref": "VPCID"
          },
          "SecurityGroupEgress":	[ 
				    {
						"IpProtocol": "tcp",
              "FromPort": "0",
              "ToPort": "65535",
              "CidrIp": { "Ref": "SSHAccessRule" }
					},	
					{
						"IpProtocol": "tcp",
						"FromPort": "443",
						"ToPort": "443",
						"CidrIp": { "Ref": "SSHAccessRuleTibco" }
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "445",
						"ToPort": "445",
						"CidrIp": { "Ref": "SSHAccessRule" }
					}
				],
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": { "Ref": "DBSSLPort" },
              "ToPort": { "Ref": "DBSSLPort" },
              "CidrIp": { "Ref": "SSHAccessRuleTibco" }
            },
            {
              "IpProtocol": "tcp",
              "FromPort": { "Ref": "DBSSLPort" },
              "ToPort": { "Ref": "DBSSLPort" },
              "CidrIp": { "Ref": "SSHAccessRule" }
            }
          ]
        }
      }
    },
    "Outputs": {
      "VPCID": {
        "Description": "VPC ID",
        "Value": { "Ref": "VPCID" },
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-VPCID" } }
      },
      "Subnet1ID": {
        "Description": "ID of the subnet 1 (e.g., subnet-a0246dcd)",
        "Value": { "Ref": "Subnet1ID" },
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-Subnet1ID" } }
      },
      "Subnet2ID": {
        "Description": "ID of the subnet 2 (e.g., subnet-e3246d8e)",
        "Value": { "Ref": "Subnet2ID" },
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-Subnet2ID" } }
      },
      "Subnet3ID": {
        "Description": "ID of the subnet 3 (e.g., subnet-e3246d8e)",
        "Value": { "Ref": "Subnet3ID" },
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-Subnet3ID" } }
      },
      "DBSSLPort": {
        "Value": { "Ref": "DBSSLPort" },
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-DBSSLPort" } }
      },
      "AppServerSecurityGroup": {
        "Description": "The security group ID to use to connect to Application Server",
        "Value": { "Fn::GetAtt": [ "AppServerSecurityGroup", "GroupId" ] },
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-AppServerSecurityGroupID" } }
      },
      "BatchSecurityGroup": {
        "Value": { "Fn::GetAtt": [ "BatchSecurityGroup", "GroupId" ] },
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-BatchSecurityGroupID" } }
      },
      "EFSMountTargetSecurityGroup": {
        "Description": "The security group ID to use to connect to EFS File Mount",
        "Value": { "Fn::GetAtt": [ "EFSMountTargetSecurityGroup", "GroupId" ] },
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-EFSMountTargetSecurityGroupID" } }
      },
      "RDSDBSecurityGroup": {
        "Description": "The security group ID for Oracle RDS which allows only the App Server to access the DB",
        "Value": { "Fn::GetAtt": [ "RDSDBSecurityGroup", "GroupId" ] },
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-RDSDBSecurityGroupID" } }
      },
      "CRMSDBSubnetGroup": {
        "Description": "Database subnet group",
        "Value": { "Ref": "CRMSDBSubnetGroup"},
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-CRMSDBSubnetGroup" } }
      },
      "CRMSDBParameterGRP": {
        "Description": "Database parameter group",
        "Value": { "Ref": "CRMSDBParameterGRP"},
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-CRMSDBParameterGRP" } }
      },
      "Owner": {
        "Description": "Mandatory Owner tag",
        "Value": { "Ref": "Owner" },
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-Owner" } }
      },
      "CostCentre": {
        "Description": "Mandatory Cost Centre tag",
        "Value": { "Ref": "CostCentre" },
        "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-CostCentre" } }
      }
    }
  }